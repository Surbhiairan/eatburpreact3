__d(function (global, require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.POST_USER_FAILURE = exports.SIGN_OUT = exports.POST_USER_SUCCESS = exports.FETCH_USER = undefined;
    exports.postUser = postUser;
    exports.getUser = getUser;
    exports.postUserSuccess = postUserSuccess;
    exports.postUserFailure = postUserFailure;

    var _storage = require(_dependencyMap[0], "../services/storage.service");

    var _storage2 = _interopRequireDefault(_storage);

    var _apiConfig = require(_dependencyMap[1], "../../api-config");

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    var FETCH_USER = exports.FETCH_USER = 'FETCH_USER';
    var POST_USER_SUCCESS = exports.POST_USER_SUCCESS = 'POST_USER_SUCCESS';
    var SIGN_OUT = exports.SIGN_OUT = 'SIGN_OUT';
    var POST_USER_FAILURE = exports.POST_USER_FAILURE = 'POST_USER_FAILURE';

    function postUser(user) {
        console.log('user--------', user);
        return function (dispatch) {
            console.log('inside here-----------');
            dispatch(getUser());
            return fetch(_apiConfig.API_ROOT + "/signIn", {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(user)
            }).then(function (res) {
                return res.json();
            }).then(function (json) {
                console.log('json--------', json);
                dispatch(postUserSuccess(json));

                _storage2.default.saveItem('currentUser_Token', json.token);

                return json;
            }).catch(function (err) {
                return dispatch(postUserFailure(err));
            });
        };
    }

    function getUser() {
        return {
            type: FETCH_USER
        };
    }

    function postUserSuccess(user) {
        return {
            type: POST_USER_SUCCESS,
            payload: {
                user: user
            }
        };
    }

    function postUserFailure(err) {
        return {
            type: POST_USER_FAILURE,
            payload: {
                err: err
            }
        };
    }
});